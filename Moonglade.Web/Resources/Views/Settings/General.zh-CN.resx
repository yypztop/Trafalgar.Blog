<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="* Image width and height must be equal" xml:space="preserve">
    <value>* 图片宽度和高度必须相同</value>
  </data>
  <data name=".png file" xml:space="preserve">
    <value>.png 文件</value>
  </data>
  <data name=".png or .jpg file" xml:space="preserve">
    <value>.png 或 .jpg 文件</value>
  </data>
  <data name="Auto Light / Dark theme regarding client system settings" xml:space="preserve">
    <value>根据客户端自动调整明亮/黑暗模式</value>
  </data>
  <data name="Blog Identity" xml:space="preserve">
    <value>博客身份</value>
  </data>
  <data name="Blog posts will use this time zone as date and time display." xml:space="preserve">
    <value>博客会使用该时区显示文章日期及时间</value>
  </data>
  <data name="Blog posts will use this time zone as date display." xml:space="preserve">
    <value>博客文章会使用该时区作为时间及日期显示</value>
  </data>
  <data name="Change Avatar" xml:space="preserve">
    <value>更换头像</value>
  </data>
  <data name="Change Site Icon" xml:space="preserve">
    <value>更换网站图标</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>不显示</value>
  </data>
  <data name="Drag and drop image file here" xml:space="preserve">
    <value>拖拽图片文件到此处</value>
  </data>
  <data name="Email address to receive notifications from this blog." xml:space="preserve">
    <value>用于接收博客系统通知的邮箱</value>
  </data>
  <data name="HTML Pitch" xml:space="preserve">
    <value>HTML区域</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>左侧</value>
  </data>
  <data name="New Avatar" xml:space="preserve">
    <value>新头像</value>
  </data>
  <data name="New Icon" xml:space="preserve">
    <value>新图标</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>右侧</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="Set a primary domain if your website binds to multiple domian names." xml:space="preserve">
    <value>若您的网站绑定了多个域名，请填写主域名</value>
  </data>
  <data name="Short description is for display only on Phone screen." xml:space="preserve">
    <value>仅用于在手机版视图显示</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>主题</value>
  </data>
  <data name="Time Zone" xml:space="preserve">
    <value>时区</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>上传</value>
  </data>
  <data name="Use [c] for copyright mark: &amp;copy;, [year] for current year." xml:space="preserve">
    <value>使用 [c] 表示版权符号 &amp;copy; ，[year] 表示当前年份</value>
  </data>
</root>